

<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <title>Take Picture of Plant</title>
    <style>
#video {
  border: 1px solid black;
  box-shadow: 2px 2px 3px black;
  width:320px;
  height:240px;
}

#photo {
  border: 1px solid black;
  box-shadow: 2px 2px 3px black;
  width:320px;
  height:240px;
}

#canvas {
  display:none;
}

.camera {
  width: 340px;
  display:inline-block;
}

.output {
  width: 340px;
  display:inline-block;
}
      #startbutton{
        color: #8CAE68; 
        background: transparent;
        border: 2px solid #8CAE68;
        border-radius: 6px;
        padding: 16px 32px;
        
        font-size: 16px;
        margin: 4px 2px;
        -webkit-transition-duration: 0.4s; /* Safari */
        transition-duration: 0.4s;
        cursor: pointer;
        text-decoration: none;
        text-transform: uppercase;
        }
      #startbutton:hover {
      background-color: #8CAE68;
      color: white;
      }
.contentarea {
  font-size: 16px;
  font-family: "Lucida Grande", "Arial", sans-serif;
  width: 760px;
}
    </style>
  </head>
  <body>
  <div class="contentarea">
	<h1>
		Mach ein Foto von deiner Pflanze!
	</h1>
  <div class="camera">
    <video id="video">Video stream not available.</video>
    <button id="startbutton">Take photo</button> 
  </div>
  <canvas id="canvas">
  </canvas>
  <div class="output">
    <img id="photo" alt="The screen capture will appear in this box."> 
    <script>
        // define width, height is calculated later
        let width = 320;   
        let height = 0;   
        let streaming = false;
        // define some html elements
        let video = null;
        let canvas = null;
        let photo = null;
        let startbutton = null;

        function startup() {
          video = document.getElementById('video');
          canvas = document.getElementById('canvas');
          photo = document.getElementById('photo');
          startbutton = document.getElementById('startbutton');
          navigator.mediaDevices.getUserMedia({video: true, audio: false})
          .then(function(stream) {
            video.srcObject = stream;
            video.play();
          })
          .catch(function(err) {
            console.log("An error occurred: " + err);
          });
          video.addEventListener('canplay', function(ev){
            if (!streaming) {
              height = video.videoHeight / (video.videoWidth/width);
              // fixes a bug in firefox
              if (isNaN(height)) {
                height = width / (4/3);
              }
              video.setAttribute('width', width);
              video.setAttribute('height', height);
              canvas.setAttribute('width', width);
              canvas.setAttribute('height', height);
              streaming = true;
            }
          }, false);
          startbutton.addEventListener('click', function(ev){
            takepicture();
            ev.preventDefault();
          }, false);
          clearphoto();
        }

        function clearphoto() {
          var context = canvas.getContext('2d');
          context.fillStyle = "#AAA";
          context.fillRect(0, 0, canvas.width, canvas.height);
          var data = canvas.toDataURL('image/png');
          photo.setAttribute('src', data);
        }

        // Capture a photo by fetching the current contents of the video
        // and drawing it into a canvas, then converting that to a PNG
        // format data URL. By drawing it on an offscreen canvas and then
        // drawing that to the screen, we can change its size and/or apply
        // other changes before drawing it.

        function takepicture() {
          var context = canvas.getContext('2d');
          if (width && height) {
            canvas.width = width;
            canvas.height = height;
            context.drawImage(video, 0, 0, width, height);
            var data = canvas.toDataURL('image/png');
            photo.setAttribute('src', data);
          } else {
            clearphoto();
          }
          }

        // event listener to run startup once loading is done
        window.addEventListener('load', startup, false);
    </script>
  </body>
</html>